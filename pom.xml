<?xml version="1.0"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
    <modelVersion>4.0.0</modelVersion>
    <groupId>kissthinker</groupId>
    <artifactId>xml</artifactId>
    <name>${project.artifactId}</name>
    <url>http://www.kissthinker.com</url>
    
    <!-- Major.Minor.Trivial versioning scheme -->
    <version>0.0.1</version>
    
    <!-- pom, jar, war, ear, rar, sar, or har -->
    <packaging>jar</packaging>
    
    <developers>
        <developer>
            <id>davidainslie</id>
            <name>David Ainslie</name>
            <email>dainslie@gmail.com</email>
        </developer>
    </developers>
        
    <properties>
        <!-- Ensure that the build is consistent across all platforms i.e. platform independent encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- github server corresponds to entry in ~/.m2/settings.xml -->
        <github.global.server>github</github.global.server>
        
        <kissthinker.object.version>0.0.1</kissthinker.object.version>
        <kissthinker.text.version>0.0.1</kissthinker.text.version>
        
        <java.version>1.7</java.version>
        <javaee.version>6.0</javaee.version>        
        <aspectj.version>1.7.0</aspectj.version>
        <cglib.version>2.2.2</cglib.version>
        <slf4j.version>1.7.1</slf4j.version>
        <logback.version>1.0.6</logback.version>
        <junit.version>4.10</junit.version>        
        <mockito.version>1.8.4</mockito.version>
        <hamcrest.version>1.3</hamcrest.version>        
        <commons-io.version>1.3.2</commons-io.version>
        <guava.version>r09</guava.version>
        <op4j.version>1.2</op4j.version>               
    </properties>    
    
    <repositories>
        <repository>
            <id>kissthinker.mvn.repo</id>
            <url>https://raw.github.com/davidainslie/kissthinker/mvn-repo/</url>
            
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>    
    
    <dependencies>
        <dependency>
            <groupId>kissthinker</groupId>
            <artifactId>object</artifactId>
            <version>${kissthinker.object.version}</version>
        </dependency>
        
        <dependency>
            <groupId>kissthinker</groupId>
            <artifactId>text</artifactId>
            <version>${kissthinker.text.version}</version>
        </dependency>
              
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>        
        
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib.version}</version>
        </dependency>

        <!-- Any application needs logging - SLF4J acts as an interface/contract to undering logging implementations -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- A logging implemenation (supposedly a better Log4J) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- Always unit test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>                   
        
        <!-- At some point unit tests (and even integration tests) need mocking capabilities -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>               

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.op4j</groupId>
            <artifactId>op4j</artifactId>
            <version>${op4j.version}</version>
        </dependency>                        
    </dependencies>

    <dependencyManagement>
        <dependencies>            
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.groupId}.${project.artifactId}-${project.version}</finalName>

        <plugins>
            <plugin>
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.7</version>
            
                <configuration>
                    <message>Maven artifacts for ${project.version}</message> <!-- git commit message -->
                    <noJekyll>true</noJekyll> <!-- disable webpage processing -->
                    <outputDirectory>${user.home}/mvn-repo</outputDirectory> <!-- matches distribution management repository url -->
                    <branch>refs/heads/mvn-repo</branch> <!-- remote branch name -->
                    
                    <includes>
                        <include>**/*</include>
                    </includes>
                
                    <repositoryName>kissthinker</repositoryName> <!-- github repo name -->
                    <repositoryOwner>davidainslie</repositoryOwner> <!-- github username -->
                </configuration>
            
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>                            
                        </goals>
                
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>

                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <complianceLevel>${java.version}</complianceLevel>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <!-- Recommended to use the following, but not everyone has the JAVA_HOME environment variable set -->
                    <!-- executable>${env.JAVA_HOME}/bin/javac</executable -->
                    <fork>true</fork>
                </configuration>
            </plugin>                                   
                  
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.9</version>

                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!-- Required if (AspectJ) load time weaving is used instead of compile time weaving, and would also require an aop.xml -->
                    <!-- Note that there is an aop.xml within "core" project's "META-INF" that is name Xaop.xml so that it is ignored (if an agent is run). -->
                    <!-- argLine>-javaagent:${basedir}/target/dependency/aspectjweaver.jar</argLine -->
                    
                    <!-- Exclude integration tests from standard test lifecycle -->
                    <excludes>
                        <exclude>**\*IT.java</exclude>
                        <exclude>**\*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>

                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                </configuration>
                
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>

                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>

                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions> 
            </plugin>

            <!-- checkstyle:checkstyle -->
            <plugin>
                <groupId>maven</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.1</version>
                
                <configuration>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>

            <!-- findbugs:findbugs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.5.2</version>
                    
                <configuration>
                    <findbugsXmlOutput>true</findbugsXmlOutput>
                    <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>                                   
            
            <!-- The configuration of maven-assembly-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Specifies the configuration file of the assembly plugin -->
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
             </plugin>

             <!-- The configuration of maven-jar-plugin -->
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-jar-plugin</artifactId>
                 <version>2.3.1</version>
                 <!-- The configuration of the plugin -->
                 <configuration>
                     <!-- Configuration of the archiver -->
                     <archive>
                         <!-- Manifest specific configuration -->
                         <manifest>
                             <!-- Classpath is added to the manifest of the created jar file. -->
                             <addClasspath>true</addClasspath>
                             <!--
                                Configures the classpath prefix. This configuration option is
                                used to specify that all needed libraries are found under lib/
                                directory.
                            -->
                             <classpathPrefix>lib/</classpathPrefix>
                             <!-- Specifies the main class of the application -->
                             <mainClass/>
                         </manifest>
                     </archive>
                 </configuration>
             </plugin>                         
        </plugins>
        
        <pluginManagement>
            <plugins>
                <!-- Required by m2e Eclipse plugin
                     m2e allows interactions with Maven inside Eclipse, though the latest version 1.2.0 has issues which the following resolves -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
    
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[2.0,)</versionRange>
        
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                        </goals>
                                    </pluginExecutionFilter>

                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                                
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>aspectj-maven-plugin</artifactId>
                                        <versionRange>[1.3,)</versionRange>
        
                                        <goals>
                                            <goal>compile</goal>
                                            <goal>test-compile</goal>
                                        </goals>
                                    </pluginExecutionFilter>

                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    <profiles>
        <profile>
            <id>integration</id>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.9</version>
      
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                
                                <goals>
                                    <goal>test</goal>
                                </goals>
        
                                <configuration>
                                    <excludes>
                                        <exclude>none</exclude>
                                    </excludes>
           
                                    <includes>
                                        <include>**\*IT.java</include>
                                        <include>**\*IntegrationTest.java</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <distributionManagement>
        <repository>
            <id>kissthinker.mvn.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${user.home}/mvn-repo</url>
        </repository>
    </distributionManagement>
    
</project>